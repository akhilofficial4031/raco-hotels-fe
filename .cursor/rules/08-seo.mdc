# SEO Implementation Guidelines - Raco Hotels Customer Portal

## SEO-First Development Approach

When creating any new feature, page, or component, SEO implementation must be considered from the start. This document outlines the mandatory SEO steps to follow for every development task.

## Pre-Development SEO Planning

### 1. SEO Impact Assessment

Before starting any feature development, assess:

- **Page Type**: Static, dynamic, or hybrid content
- **Content Structure**: Headings, content blocks, media
- **User Intent**: Informational, transactional, navigational
- **Keywords**: Primary and secondary keywords for the feature
- **Competitors**: How similar features are optimized elsewhere

### 2. SEO Requirements Checklist

#### For Every New Page/Route:

- [ ] Define primary H1 heading and page purpose
- [ ] Identify target keywords (2-5 primary keywords)
- [ ] Plan meta title (50-60 characters)
- [ ] Plan meta description (150-160 characters)
- [ ] Determine canonical URL structure
- [ ] Plan internal linking strategy
- [ ] Identify required structured data (Schema.org)

#### For Dynamic Content Pages:

- [ ] Plan dynamic meta title patterns
- [ ] Create description templates for dynamic content
- [ ] Identify variable data for structured data
- [ ] Plan sitemap integration
- [ ] Consider pagination SEO (if applicable)

## During Development - SEO Implementation Steps

### 1. Metadata Implementation

#### Step 1: Use Metadata Utilities

Always use the centralized metadata utilities from `/lib/metadata.ts`:

```typescript
// For static pages
import { generatePageMetadata } from "@/lib/metadata";

export const metadata = generatePageMetadata({
  title: "Your Page Title",
  description: "Your page description",
  keywords: ["keyword1", "keyword2", "keyword3"],
  path: "/your-page-path",
});
```

#### Step 2: For Dynamic Pages

```typescript
// For dynamic pages
import {
  generateHotelMetadata,
  withMetadataErrorHandling,
} from "@/lib/metadata";

export const generateMetadata = withMetadataErrorHandling(async (params) => {
  // Fetch your data
  const data = await fetchData(params);

  // Use appropriate generator
  return generateYourContentMetadata(data);
}, "Your Page Type");
```

### 2. Content Structure Implementation

#### Step 1: Semantic HTML Structure

```typescript
// Proper heading hierarchy
<main>
  <h1>Primary Page Heading</h1>
  <section>
    <h2>Section Heading</h2>
    <h3>Subsection Heading</h3>
  </section>
</main>
```

#### Step 2: SEO Component Integration

```typescript
import SEOHead from '@/components/SEOHead';

// Add structured data and enhanced SEO
<SEOHead
  structuredData={[yourSchemaData]}
  title="Page Specific Title"
  description="Page specific description"
  canonical={`${siteUrl}/your-path`}
/>
```

### 3. Structured Data Implementation

#### Step 1: Use Schema Generators

```typescript
import { generateHotelSchema, generateBreadcrumbSchema } from "@/lib/seo";

// Generate appropriate structured data
const schemaData = generateYourContentSchema(data);
const breadcrumbData = generateBreadcrumbSchema(breadcrumbItems);
```

#### Step 2: Custom Schema Creation

For new content types, create schema generators in `/lib/seo.ts`:

```typescript
export const generateYourContentSchema = (content: YourContentType) => ({
  "@context": "https://schema.org",
  "@type": "YourSchemaType",
  name: content.name,
  description: content.description,
  // Add relevant schema properties
});
```

### 4. Sitemap Integration

#### For Dynamic Content:

Update `/app/server-sitemap.xml/route.ts`:

```typescript
// Add your content to dynamic sitemap
const yourContentFields = yourContent.map((item) => ({
  loc: `${siteUrl}/your-path/${item.slug}`,
  lastmod: item.updatedAt || new Date().toISOString(),
  changefreq: "weekly" as const,
  priority: 0.8,
}));
```

#### For Static Pages:

Update `next-sitemap.config.js`:

```javascript
// Add to exclude if needed, or ensure it's included
exclude: [
  '/admin/*',
  '/api/*',
  // Add paths to exclude
],
```

## Post-Development SEO Validation

### 1. Technical SEO Checklist

#### Metadata Validation:

- [ ] Meta title is 50-60 characters
- [ ] Meta description is 150-160 characters
- [ ] Keywords are relevant and not stuffed
- [ ] Canonical URL is correct
- [ ] Open Graph tags are properly set
- [ ] Twitter Card meta tags are included

#### Content Validation:

- [ ] Single H1 tag per page
- [ ] Proper heading hierarchy (H1 → H2 → H3)
- [ ] Alt text for all images
- [ ] Internal links where appropriate
- [ ] External links have proper rel attributes

#### Technical Implementation:

- [ ] Structured data validates on Schema.org validator
- [ ] Page loads within 2.5 seconds (Core Web Vitals)
- [ ] Mobile-friendly responsive design
- [ ] HTTPS implementation
- [ ] No broken links

### 2. SEO Testing Tools

#### Before Production:

1. **Google Rich Results Test**: Test structured data
2. **PageSpeed Insights**: Validate Core Web Vitals
3. **Mobile-Friendly Test**: Ensure mobile compatibility
4. **Lighthouse SEO Audit**: Overall SEO score

#### Post-Production:

1. **Google Search Console**: Monitor indexing status
2. **XML Sitemap**: Verify sitemap submission
3. **Analytics**: Track organic traffic performance

## SEO-Specific Code Patterns

### 1. Image Optimization

```typescript
import Image from 'next/image';

// Always include alt text and proper sizing
<Image
  src={imageUrl}
  alt="Descriptive alt text for SEO"
  width={800}
  height={600}
  priority={isAboveFold}
  placeholder="blur"
/>
```

### 2. Internal Linking

```typescript
import Link from 'next/link';

// Use descriptive anchor text
<Link href="/hotels/luxury-resort">
  Explore our luxury resort collection
</Link>
```

### 3. External Links

```typescript
// Add proper rel attributes for external links
<a
  href="https://external-site.com"
  target="_blank"
  rel="noopener noreferrer"
>
  External Resource
</a>
```

## Feature-Specific SEO Guidelines

### 1. Hotel Listing Pages

- [ ] Implement hotel aggregation schema
- [ ] Add location-based keywords
- [ ] Include hotel amenities in content
- [ ] Add customer review snippets
- [ ] Implement proper pagination SEO

### 2. Individual Hotel Pages

- [ ] Use hotel-specific schema markup
- [ ] Include geo-coordinates
- [ ] Add booking availability information
- [ ] Implement photo gallery optimization
- [ ] Include local attractions and landmarks

### 3. Booking/Transactional Pages

- [ ] Add transaction-specific schema
- [ ] Implement security badges
- [ ] Include trust signals
- [ ] Optimize form accessibility
- [ ] Add progress indicators

### 4. Blog/Content Pages

- [ ] Implement article schema markup
- [ ] Add author information
- [ ] Include publication dates
- [ ] Add social sharing buttons
- [ ] Implement related content recommendations

## Content Guidelines for SEO

### 1. Content Quality Standards

- **Minimum Word Count**: 300 words for content pages
- **Keyword Density**: 1-2% of primary keyword
- **Readability**: Aim for 8th-grade reading level
- **Uniqueness**: 100% original content, no duplication

### 2. Content Structure Best Practices

```markdown
# Primary Keyword in H1 (Only One H1)

Introduction paragraph with primary keyword in first 100 words.

## Secondary Keyword in H2

Content section with supporting information.

### Related Keyword in H3

Detailed information and examples.

## Conclusion

Summary with call-to-action and primary keyword.
```

## SEO Performance Monitoring

### 1. Key Metrics to Track

- **Organic Traffic**: Monitor via Google Analytics
- **Keyword Rankings**: Track target keyword positions
- **Core Web Vitals**: LCP, FID, CLS scores
- **Click-Through Rates**: From search results
- **Bounce Rate**: User engagement metrics

### 2. Monthly SEO Review Process

- [ ] Review Google Search Console performance
- [ ] Analyze top-performing pages
- [ ] Identify content gaps and opportunities
- [ ] Update outdated content
- [ ] Monitor competitor SEO strategies

## SEO Emergency Procedures

### 1. SEO Issues Requiring Immediate Attention

- **Duplicate Content**: Fix canonical issues immediately
- **Broken Links**: Update or redirect broken internal links
- **Missing Meta Tags**: Add missing essential meta tags
- **Structured Data Errors**: Fix schema markup errors
- **Page Speed Issues**: Optimize slow-loading pages

### 2. SEO Rollback Procedures

If SEO changes negatively impact rankings:

1. Revert recent meta tag changes
2. Restore previous URL structure
3. Check for broken redirects
4. Verify sitemap functionality
5. Monitor Search Console for crawl errors

## Integration with Development Workflow

### 1. Code Review SEO Checklist

Every pull request must include:

- [ ] SEO metadata implementation
- [ ] Structured data validation
- [ ] Image alt text verification
- [ ] Internal linking review
- [ ] Heading hierarchy validation

### 2. Deployment SEO Verification

Before production deployment:

- [ ] Test meta tags in staging
- [ ] Validate structured data markup
- [ ] Check sitemap generation
- [ ] Verify robots.txt configuration
- [ ] Test page load speeds

## SEO Documentation Requirements

### 1. Feature Documentation Must Include

- Target keywords for the feature
- SEO implementation approach
- Structured data schemas used
- Internal linking strategy
- Performance impact assessment

### 2. SEO Change Log

Document all SEO changes:

- Date of implementation
- Pages/features affected
- Changes made
- Expected impact
- Actual results (to be updated)

---

## Quick Reference: SEO Implementation Checklist

### ✅ New Page/Feature Checklist

1. **Planning Phase**
   - [ ] Define target keywords
   - [ ] Plan meta title and description
   - [ ] Identify required schema markup
   - [ ] Plan content structure

2. **Development Phase**
   - [ ] Implement metadata using utilities
   - [ ] Add structured data
   - [ ] Ensure proper heading hierarchy
   - [ ] Optimize images with alt text
   - [ ] Add internal links

3. **Testing Phase**
   - [ ] Validate meta tags
   - [ ] Test structured data
   - [ ] Check mobile responsiveness
   - [ ] Verify page speed
   - [ ] Test in Search Console

4. **Post-Launch Phase**
   - [ ] Submit to sitemap
   - [ ] Monitor in analytics
   - [ ] Track keyword rankings
   - [ ] Analyze user behavior
   - [ ] Optimize based on data

**Remember**: SEO is not an afterthought - it's an integral part of every feature development process. Every page must be optimized from day one to ensure maximum search visibility and user experience.
